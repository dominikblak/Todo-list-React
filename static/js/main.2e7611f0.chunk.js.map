{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","autoFocus","required","placeholder","Tasks","props","tasks","map","task","done","content","id","Buttons","hideDone","toggleHideDone","length","onClick","disabled","every","Section","title","sectionContent","extraHeaderContent","Header","Container","children","App","useState","setHideDone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAQeA,EAPF,kBACX,uBAAMC,UAAU,OAAhB,UACE,uBAAOA,UAAU,eAAeC,WAAS,EAACC,UAAQ,EAACC,YAAY,2BAC/D,wBAAQH,UAAU,eAAlB,+BCQWI,G,MAXD,SAACC,GAAD,OACZ,oBAAIL,UAAU,QAAd,SACGK,EAAMC,MAAMC,KAAI,SAACC,GAAD,OACf,qBAAkBR,UAAS,wEAA3B,UACE,wBAAQA,UAAU,eAAlB,SAAkCQ,EAAKC,KAAO,SAAM,KACpD,sBAAMT,UAAS,wBAAmBQ,EAAKC,KAAO,sBAAwB,IAAtE,SAA6ED,EAAKE,UAClF,wBAAQV,UAAU,sCAAlB,6BAHOQ,EAAKG,WCYLC,G,MAdC,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAOO,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,eAApB,OACd,qBAAKd,UAAU,UAAf,SACGM,EAAMS,OAAS,GACd,qCACE,yBAAQC,QAASF,EAAgBd,UAAU,kBAA3C,UACGa,EAAW,aAAU,QADxB,qBAGA,wBAAQb,UAAU,kBAAkBiB,SAAUX,EAAMY,OAAM,qBAAGT,QAA7D,0CCCOU,G,MATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,eAAgBC,EAA1B,EAA0BA,mBAA1B,OACd,0BAAStB,UAAU,UAAnB,UACE,qBAAIA,UAAU,kBAAd,UACGoB,EACAE,KAEH,qBAAKtB,UAAU,mBAAf,SAAmCqB,SCLxBE,G,MADA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OAAe,oBAAIpB,UAAU,SAAd,SAAwBoB,MCCvCI,G,MADG,SAACnB,GAAD,OAAW,sBAAML,UAAU,YAAhB,SAA6BK,EAAMoB,aCO1DnB,EAAQ,CACZ,CAAEK,GAAI,EAAGD,QAAS,6BAAoBD,MAAM,GAC5C,CAAEE,GAAI,EAAGD,QAAS,wBAAeD,MAAM,IAqB1BiB,MAlBf,WACE,MAAgCC,oBAAS,GAAzC,mBAAOd,EAAP,KAAiBe,EAAjB,KAIA,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQR,MAAM,qBACd,cAAC,EAAD,CAASA,MAAM,qBAAqBC,eAAgB,cAAC,EAAD,MACpD,cAAC,EAAD,CACED,MAAM,mBACNC,eAAgB,cAAC,EAAD,CAAOf,MAAOA,EAAOO,SAAUA,IAC/CS,mBAAoB,cAAC,EAAD,CAAShB,MAAOA,EAAOO,SAAUA,EAAUC,eAV9C,WACrBc,GAAY,SAACf,GAAD,OAAeA,cCJhBgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2e7611f0.chunk.js","sourcesContent":["import \"./style.css\";\r\nconst Form = () => (\r\n  <form className=\"form\">\r\n    <input className=\"form__input \" autoFocus required placeholder=\"Co jest do zrobienia ?\" />\r\n    <button className=\"form__button\">Dodaj zadanie</button>\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import \"./style.css\";\r\nconst Tasks = (props) => (\r\n  <ul className=\"tasks\">\r\n    {props.tasks.map((task) => (\r\n      <li key={task.id} className={`tasks__list {task.done && props.hideDone ? \"tasks__list--hiden\" : \"\"}`}>\r\n        <button className=\"task__button\">{task.done ? \"âœ”\" : \"\"}</button>\r\n        <span className={`task__content ${task.done ? \"task__content--done\" : \"\"}`}>{task.content}</span>\r\n        <button className=\" task__button  task__button--remove\">ðŸ—‘ </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nexport default Tasks;\r\n","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone }) => (\r\n  <div className=\"buttons\">\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <button onClick={toggleHideDone} className=\"buttons__button\">\r\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n        </button>\r\n        <button className=\"buttons__button\" disabled={tasks.every(({ done }) => done)}>\r\n          UkoÅ„cz wszytskie\r\n        </button>\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\nexport default Buttons;\r\n","import \"./style.css\";\r\nconst Section = ({ title, sectionContent, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <h2 className=\"section__header\">\r\n      {title}\r\n      {extraHeaderContent}\r\n    </h2>\r\n    <div className=\"section__content\">{sectionContent}</div>\r\n  </section>\r\n);\r\nexport default Section;\r\n","import \"./style.css\";\r\nconst Header = ({ title }) => <h1 className=\"header\">{title}</h1>;\r\nexport default Header;\r\n","import \"./style.css\";\r\nconst Container = (props) => <main className=\"container\">{props.children}</main>;\r\nexport default Container;\r\n","import Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useState } from \"react\";\r\n\r\nconst tasks = [\r\n  { id: 1, content: \"przejÅ›Ä‡ na React\", done: false },\r\n  { id: 2, content: \"zjeÅ›Ä‡ obiad\", done: true },\r\n];\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n  const toggleHideDone = () => {\r\n    setHideDone((hideDone) => !hideDone);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section title=\"Dodaj nowe zadanie\" sectionContent={<Form />} />\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        sectionContent={<Tasks tasks={tasks} hideDone={hideDone} />}\r\n        extraHeaderContent={<Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} />}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}