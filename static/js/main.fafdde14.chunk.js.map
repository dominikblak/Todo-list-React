{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskConent","setNewTaskContent","className","onSubmit","event","preventDefault","contetTrimmed","trim","value","autoFocus","required","placeholder","onChange","target","Tasks","props","tasks","map","task","done","hideDone","onClick","toggleTaskDone","id","content","removeTask","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","sectionContent","extraHeaderContent","Header","Container","children","App","getInitialTasksFromLocalStorage","JSON","parse","localStorage","getItem","setHideDone","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fafdde14.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskConent, setNewTaskContent] = useState(\"\");\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contetTrimmed = newTaskConent.trim();\r\n    if (!contetTrimmed) {\r\n      return;\r\n    }\r\n\r\n    addNewTask(contetTrimmed);\r\n    setNewTaskContent(\" \");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskConent}\r\n        className=\"form__input \"\r\n        autoFocus\r\n        required\r\n        placeholder=\"Co jest do zrobienia ?\"\r\n        onChange={(event) => setNewTaskContent(event.target.value)}\r\n      />\r\n      <button className=\"form__button\">Dodaj zadanie</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./style.css\";\r\n\r\nconst Tasks = (props) => (\r\n  <ul className=\"tasks\">\r\n    {props.tasks.map((task) => (\r\n      <li key={task.id} className={`tasks__list ${task.done && props.hideDone ? \"tasks__list--hiden\" : \"\"}`}>\r\n        <button onClick={() => props.toggleTaskDone(task.id)} className=\"task__button\">\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </button>\r\n        <span className={`task__content ${task.done ? \"task__content--done\" : \"\"}`}>{task.content}</span>\r\n        <button className=\" task__button  task__button--remove\" onClick={() => props.removeTask(task.id)}>\r\n          ðŸ—‘{\" \"}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Tasks;\r\n","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <div className=\"buttons\">\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <button onClick={toggleHideDone} className=\"buttons__button\">\r\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n        </button>\r\n        <button onClick={setAllDone} className=\"buttons__button\" disabled={tasks.every(({ done }) => done)}>\r\n          UkoÅ„cz wszytskie\r\n        </button>\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Buttons;\r\n","import \"./style.css\";\r\n\r\nconst Section = ({ title, sectionContent, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <h2 className=\"section__header\">\r\n      {title}\r\n      {extraHeaderContent}\r\n    </h2>\r\n    <div className=\"section__content\">{sectionContent}</div>\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import \"./style.css\";\r\n\r\nconst Header = ({ title }) => <h1 className=\"header\">{title}</h1>;\r\n\r\nexport default Header;\r\n","import \"./style.css\";\r\n\r\nconst Container = (props) => <main className=\"container\">{props.children}</main>;\r\n\r\nexport default Container;\r\n","import Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const getInitialTasksFromLocalStorage = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  const [hideDone, setHideDone] = useState(false);\r\n  const [tasks, setTasks] = useState(getInitialTasksFromLocalStorage);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone((hideDone) => !hideDone);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return {\r\n            ...task,\r\n            done: !task.done,\r\n          };\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => ({\r\n        ...task,\r\n        done: true,\r\n      }))\r\n    );\r\n  };\r\n\r\n  const addNewTask = (newTaskConent) => {\r\n    setTasks((tasks) => [\r\n      ...tasks,\r\n      {\r\n        content: newTaskConent,\r\n        done: false,\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n      },\r\n    ]);\r\n  };\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section title=\"Dodaj nowe zadanie\" sectionContent={<Form addNewTask={addNewTask} />} />\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        sectionContent={\r\n          <Tasks tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setAllDone={setAllDone} />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}