{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["Wrapper","styled","form","theme","breakpoint","mobileMax","Input","input","color","mercury","Button","button","teal","white","Form","addNewTask","inputRef","useRef","useState","newTaskConent","setNewTaskContent","onSubmit","event","preventDefault","contetTrimmed","trim","current","focus","ref","value","autoFocus","required","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","green","remove","red","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","div","Toggle","grey","Buttons","toggleHideDone","setAllDone","length","disabled","every","section","Div","Header","h2","Section","title","sectionContent","extraHeaderContent","h1","main","Container","props","children","App","setHideDone","initialTasksFromLocalStorage","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19264970.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\nexport const Input = styled.input`\r\n  border: 2px solid ${({ theme }) => theme.color.mercury};\r\n  padding: 10px;\r\n`;\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.color.teal};\r\n  color: ${({ theme }) => theme.color.white};\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border: none;\r\n  margin-left: 10px;\r\n  transition: transform 1s;\r\n  &:hover {\r\n    filter: brightness(120%);\r\n    transform: scale(1.1);\r\n  }\r\n  &:active {\r\n    transition: none;\r\n    filter: brightness(150%);\r\n  }\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-left: 0px;\r\n    &:hover {\r\n      transform: none;\r\n    }\r\n  } ;\r\n`;\r\n","import { useState, useRef } from \"react\";\r\nimport { Input, Wrapper, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const inputRef = useRef(null);\r\n  const [newTaskConent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contetTrimmed = newTaskConent.trim();\r\n    if (!contetTrimmed) {\r\n      return;\r\n    }\r\n\r\n    addNewTask(contetTrimmed);\r\n    setNewTaskContent(\" \");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Wrapper onSubmit={onFormSubmit}>\r\n      <Input\r\n        ref={inputRef}\r\n        value={newTaskConent}\r\n        autoFocus\r\n        required\r\n        placeholder=\"Co jest do zrobienia ?\"\r\n        onChange={(event) => setNewTaskContent(event.target.value)}\r\n      />\r\n      <Button>Dodaj zadanie</Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0px;\r\n`;\r\nexport const Item = styled.li`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  align-items: center;\r\n  border-bottom: 2px solid ${({ theme }) => theme.color.mercury};\r\n  ${({ hidden }) =>\r\n    hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\nexport const Content = styled.span`\r\n  margin: 15px;\r\n  word-break: break-all;\r\n  flex-basis: 100%;\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\nexport const Button = styled.button`\r\n  height: 30px;\r\n  width: 30px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.color.white};\r\n  transition: 1s;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  ${({ toggleDone }) =>\r\n    toggleDone &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.color.green};\r\n    `};\r\n  &:hover {\r\n    filter: brightness(150%);\r\n  }\r\n  &:active {\r\n    filter: brightness(180%);\r\n    transition: none;\r\n  }\r\n  ${({ remove }) =>\r\n    remove &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.color.red};\r\n    `};\r\n  &:hover {\r\n    filter: brightness(150%);\r\n    transition: 1s;\r\n  }\r\n  &:active {\r\n    filter: brightness(200%);\r\n    transition: none;\r\n  }\r\n`;\r\n","import { List, Item, Content, Button } from \"./styled.js\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map((task) => (\r\n      <Item key={task.id} hidden={task.done && hideDone}>\r\n        <Button toggleDone onClick={() => toggleTaskDone(task.id)}>\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </Button>\r\n        <Content done={task.done}>{task.content}</Content>\r\n        <Button remove onClick={() => removeTask(task.id)}>\r\n          ðŸ—‘{\" \"}\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n  font-size: 16px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-auto-rows: 20px;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\nexport const Toggle = styled.button`\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  color: ${({ theme }) => theme.color.teal};\r\n  cursor: pointer;\r\n  transition: 1s;\r\n  &:disabled {\r\n    color: ${({ theme }) => theme.color.grey};\r\n    cursor: default;\r\n  }\r\n  &:disabled:hover {\r\n    color: ${({ theme }) => theme.color.grey};\r\n  }\r\n  &:hover {\r\n    filter: brightness(120%);\r\n  }\r\n  &:active {\r\n    filter: brightness(140%);\r\n    transition: none;\r\n  }\r\n`;\r\n","import { Wrapper, Toggle } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <Wrapper>\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <Toggle onClick={toggleHideDone}>{hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone</Toggle>\r\n        <Toggle onClick={setAllDone} disabled={tasks.every(({ done }) => done)}>\r\n          UkoÅ„cz wszytskie\r\n        </Toggle>\r\n      </>\r\n    )}\r\n  </Wrapper>\r\n);\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n  background-color: ${({ theme }) => theme.color.white};\r\n`;\r\nexport const Div = styled.div`\r\n  padding: 20px 15px 20px;\r\n`;\r\nexport const Header = styled.h2`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.color.mercury};\r\n  margin-top: 15px;\r\n  margin-bottom: 0px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","import { Wrapper, Div, Header } from \"./styled\";\r\n\r\nconst Section = ({ title, sectionContent, extraHeaderContent }) => (\r\n  <Wrapper>\r\n    <Header>\r\n      {title}\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <Div>{sectionContent}</Div>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.h1`\r\n  text-align: left;\r\n  margin-top: 30px;\r\n  font-weight: 700;\r\n`;\r\n","import { Content } from \"./styled\";\r\n\r\nconst Header = ({ title }) => <Content>{title}</Content>;\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.main`\r\n  max-width: 815px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n`;\r\n","import { Content } from \"./styled.js\";\r\n\r\nconst Container = (props) => <Content>{props.children}</Content>;\r\n\r\nexport default Container;\r\n","import Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useState } from \"react\";\r\nimport { useTasks } from \"./useTasks\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone((hideDone) => !hideDone);\r\n  };\r\n\r\n  const { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section title=\"Dodaj nowe zadanie\" sectionContent={<Form addNewTask={addNewTask} />} />\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        sectionContent={\r\n          <Tasks tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setAllDone={setAllDone} />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n  const initialTasksFromLocalStorage = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(initialTasksFromLocalStorage);\r\n  const removeTask = (id) => {\r\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return {\r\n            ...task,\r\n            done: !task.done,\r\n          };\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => ({\r\n        ...task,\r\n        done: true,\r\n      }))\r\n    );\r\n  };\r\n\r\n  const addNewTask = (newTaskConent) => {\r\n    setTasks((tasks) => [\r\n      ...tasks,\r\n      {\r\n        content: newTaskConent,\r\n        done: false,\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n::after,\r\n::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  background-color: ${({ theme }) => theme.color.mercury};\r\n  font-family: \"Montserrat\", sans-serif;\r\n}\r\n`;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n  color: {\r\n    white: \"#ffffff\",\r\n    grey: \"#808080\",\r\n    teal: \"#008080\",\r\n    mercury: \"#e6e6e6\",\r\n    green: \"#008000\",\r\n    red: \"#FF3333\",\r\n  },\r\n  breakpoint: {\r\n    mobileMax: 767,\r\n  },\r\n};\r\n"],"sourceRoot":""}