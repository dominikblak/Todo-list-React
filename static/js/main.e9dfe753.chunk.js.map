{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Sections/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","autoFocus","required","placeholder","Tasks","props","tasks","map","task","done","content","id","Buttons","length","Fragment","hideDoneTasks","disabled","every","Section","title","sectionContent","extraHeaderContent","Header","Container","children","App","Sections","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAQeA,EAPF,kBACX,uBAAMC,UAAU,OAAhB,UACE,uBAAOA,UAAU,eAAeC,WAAS,EAACC,UAAQ,EAACC,YAAY,2BAC/D,wBAAQH,UAAU,eAAlB,+BCQWI,G,MAXD,SAACC,GAAD,OACZ,oBAAIL,UAAU,QAAd,SACGK,EAAMC,MAAMC,KAAI,SAACC,GAAD,OACf,qBAAkBR,UAAS,6EAA3B,UACE,wBAAQA,UAAU,eAAlB,SAAkCQ,EAAKC,KAAO,SAAM,KACpD,sBAAMT,UAAS,wBAAmBQ,EAAKC,KAAO,sBAAwB,IAAtE,SAA6ED,EAAKE,UAClF,wBAAQV,UAAU,sCAAlB,6BAHOQ,EAAKG,WCULC,G,MAZC,SAACP,GAAD,OACd,qBAAKL,UAAU,2BAAf,SACGK,EAAMC,MAAMO,OAAS,GACpB,eAAC,IAAMC,SAAP,WACE,yBAAQd,UAAU,kBAAlB,UAAqCK,EAAMU,cAAgB,aAAU,QAArE,qBACA,wBAAQf,UAAU,kBAAkBgB,SAAUX,EAAMC,MAAMW,OAAM,qBAAGR,QAAnE,0CCGOS,G,KATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,eAAgBC,EAA1B,EAA0BA,mBAA1B,OACd,0BAASrB,UAAU,UAAnB,UACE,qBAAIA,UAAU,kBAAd,UACGmB,EACAE,KAEH,qBAAKrB,UAAU,mBAAf,SAAmCoB,SCNxBE,EADA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OAAe,oBAAInB,UAAU,oBAAd,SAAmCmB,KCElDI,EADG,SAAClB,GAAD,OAAW,sBAAML,UAAU,YAAhB,SAA6BK,EAAMmB,YCM1DlB,EAAQ,CACZ,CAAEK,GAAI,EAAGD,QAAS,6BAAoBD,MAAM,GAC5C,CAAEE,GAAI,EAAGD,QAAS,wBAAeD,MAAM,IAiB1BgB,MAdf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQN,MAAM,qBACd,cAACO,EAAD,CAAUP,MAAM,qBAAqBC,eAAgB,cAAC,EAAD,MACrD,cAACM,EAAD,CACEP,MAAM,mBACNC,eAAgB,cAAC,EAAD,CAAOd,MAAOA,EAAOS,cARvB,QASdM,mBAAoB,cAAC,EAAD,CAASf,MAAOA,EAAOS,cAT7B,cCCPY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e9dfe753.chunk.js","sourcesContent":["import \"./style.css\";\r\nconst Form = () => (\r\n  <form className=\"form\">\r\n    <input className=\"form__input \" autoFocus required placeholder=\"Co jest do zrobienia ?\" />\r\n    <button className=\"form__button\">Dodaj zadanie</button>\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import \"./style.css\";\r\nconst Tasks = (props) => (\r\n  <ul className=\"tasks\">\r\n    {props.tasks.map((task) => (\r\n      <li key={task.id} className={`tasks__list {task.done && props.hideDoneTasks ? \"tasks__list--hiden\" : \"\"}`}>\r\n        <button className=\"task__button\">{task.done ? \"âœ”\" : \"\"}</button>\r\n        <span className={`task__content ${task.done ? \"task__content--done\" : \"\"}`}>{task.content}</span>\r\n        <button className=\" task__button  task__button--remove\">ðŸ—‘ </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nexport default Tasks;\r\n","import \"./style.css\";\r\nimport React from \"react\";\r\nconst Buttons = (props) => (\r\n  <div className=\"section_buttonsCompleted\">\r\n    {props.tasks.length > 0 && (\r\n      <React.Fragment>\r\n        <button className=\"section__button\">{props.hideDoneTasks ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone</button>\r\n        <button className=\"section__button\" disabled={props.tasks.every(({ done }) => done)}>\r\n          UkoÅ„cz wszytskie\r\n        </button>\r\n      </React.Fragment>\r\n    )}\r\n  </div>\r\n);\r\nexport default Buttons;\r\n","import \"./style.css\";\r\nconst Section = ({ title, sectionContent, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <h2 className=\"section__header\">\r\n      {title}\r\n      {extraHeaderContent}\r\n    </h2>\r\n    <div className=\"section__content\">{sectionContent}</div>\r\n  </section>\r\n);\r\nexport default Section;\r\n","const Header = ({ title }) => <h1 className=\"container__header\">{title}</h1>;\r\nexport default Header;\r\n","import \"../Sections/style.css\";\r\nconst Container = (props) => <main className=\"container\">{props.children}</main>;\r\nexport default Container;\r\n","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Sections from \"./Sections\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  { id: 1, content: \"przejÅ›Ä‡ na React\", done: false },\n  { id: 2, content: \"zjeÅ›Ä‡ obiad\", done: true },\n];\nconst hideDoneTasks = false;\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Sections title=\"Dodaj nowe zadanie\" sectionContent={<Form />} />\n      <Sections\n        title=\"Lista zadaÅ„\"\n        sectionContent={<Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n        extraHeaderContent={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}