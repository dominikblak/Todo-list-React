{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["FormSection","styled","form","FormInput","input","FormButton","button","Form","addNewTask","useState","newTaskConent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","current","focus","contetTrimmed","trim","ref","value","autoFocus","required","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","done","Button","toggleDone","remove","Tasks","props","tasks","map","task","hideDone","onClick","toggleTaskDone","id","content","removeTask","ButtonsSection","div","ButtonsToggle","Buttons","toggleHideDone","setAllDone","length","disabled","every","SectionContent","section","SectionDiv","SectionHeader","h2","Section","title","sectionContent","extraHeaderContent","MainHeader","h1","Header","main","Container","children","App","setHideDone","getInitialTasksFromLocalStorage","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf5feca8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormSection = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  @media (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\nexport const FormInput = styled.input`\r\n  border: 2px solid #e6e6e6;\r\n  padding: 10px;\r\n`;\r\nexport const FormButton = styled.button`\r\n  cursor: pointer;\r\n  background-color: teal;\r\n  color: white;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border: none;\r\n  margin-left: 10px;\r\n  transition: transform 1s;\r\n  &:hover {\r\n    background-color: hsl(180, 100%, 30%);\r\n    transform: scale(1.1);\r\n  }\r\n  &:active {\r\n    transition: none;\r\n    background-color: hsl(180, 100%, 40%);\r\n  }\r\n  @media (max-width: 767px) {\r\n    margin-left: 0px;\r\n  } ;\r\n`;\r\n","import { useState, useRef } from \"react\";\r\nimport { FormInput, FormSection, FormButton } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskConent, setNewTaskContent] = useState(\"\");\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    inputRef.current.focus();\r\n    const contetTrimmed = newTaskConent.trim();\r\n    if (!contetTrimmed) {\r\n      return;\r\n    }\r\n\r\n    addNewTask(contetTrimmed);\r\n    setNewTaskContent(\" \");\r\n  };\r\n  const inputRef = useRef(null);\r\n  return (\r\n    <FormSection onSubmit={onFormSubmit}>\r\n      <FormInput\r\n        ref={inputRef}\r\n        value={newTaskConent}\r\n        autoFocus\r\n        required\r\n        placeholder=\"Co jest do zrobienia ?\"\r\n        onChange={(event) => setNewTaskContent(event.target.value)}\r\n      />\r\n      <FormButton>Dodaj zadanie</FormButton>\r\n    </FormSection>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0px;\r\n`;\r\nexport const Item = styled.li`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  align-items: center;\r\n  border-bottom: 2px solid #e6e6e6;\r\n  ${({ hidden }) =>\r\n    hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\nexport const Content = styled.span`\r\n  margin: 15px;\r\n  word-break: break-all;\r\n  flex-basis: 100%;\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\nexport const Button = styled.button`\r\n  height: 30px;\r\n  width: 30px;\r\n  border: none;\r\n  color: white;\r\n  transition: 1s;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  ${({ toggleDone }) =>\r\n    toggleDone &&\r\n    css`\r\n      background-color: green;\r\n    `};\r\n  &:hover {\r\n    background-color: hsl(120, 100%, 35%);\r\n  }\r\n  &:active {\r\n    background-color: hsl(120, 100%, 45%);\r\n    transition: none;\r\n  }\r\n  ${({ remove }) =>\r\n    remove &&\r\n    css`\r\n      background-color: red;\r\n      transition: 1s;\r\n      &:hover {\r\n        background-color: hsl(0, 100%, 70%);\r\n        transition: 1s;\r\n      }\r\n      &:active {\r\n        background-color: hsl(0, 100%, 80%);\r\n        transition: none;\r\n      }\r\n    `}\r\n`;\r\n","import { List, Item, Content, Button } from \"./styled.js\";\r\n\r\nconst Tasks = (props) => (\r\n  <List>\r\n    {props.tasks.map((task) => (\r\n      <Item key={task.id} hidden={task.done && props.hideDone}>\r\n        <Button toggleDone onClick={() => props.toggleTaskDone(task.id)}>\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </Button>\r\n        <Content done={task.done}>{task.content}</Content>\r\n        <Button remove onClick={() => props.removeTask(task.id)}>\r\n          ðŸ—‘{\" \"}\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonsSection = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n  font-size: 16px;\r\n  @media (max-width: 767px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-auto-rows: 20px;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\nexport const ButtonsToggle = styled.button`\r\n  border: none;\r\n  background-color: white;\r\n  color: teal;\r\n  cursor: pointer;\r\n  transition: 1s;\r\n  &:disabled {\r\n    color: grey;\r\n    cursor: default;\r\n  }\r\n  &:disabled:hover {\r\n    color: grey;\r\n  }\r\n  &:hover {\r\n    color: hsl(120, 100%, 35%);\r\n  }\r\n  &:active {\r\n    color: hsl(120, 100%, 45%);\r\n    transition: none;\r\n  }\r\n`;\r\n","import { ButtonsSection, ButtonsToggle } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <ButtonsSection>\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <ButtonsToggle onClick={toggleHideDone}>{hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone</ButtonsToggle>\r\n        <ButtonsToggle onClick={setAllDone} disabled={tasks.every(({ done }) => done)}>\r\n          UkoÅ„cz wszytskie\r\n        </ButtonsToggle>\r\n      </>\r\n    )}\r\n  </ButtonsSection>\r\n);\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionContent = styled.section`\r\n  background-color: white;\r\n`;\r\nexport const SectionDiv = styled.div`\r\n  padding: 20px 15px 20px;\r\n`;\r\nexport const SectionHeader = styled.h2`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-bottom: 1px solid #eee;\r\n  margin-top: 15px;\r\n  margin-bottom: 0px;\r\n\r\n  @media (max-width: 767px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","import { SectionContent, SectionDiv, SectionHeader } from \"./styled\";\r\n\r\nconst Section = ({ title, sectionContent, extraHeaderContent }) => (\r\n  <SectionContent>\r\n    <SectionHeader>\r\n      {title}\r\n      {extraHeaderContent}\r\n    </SectionHeader>\r\n    <SectionDiv>{sectionContent}</SectionDiv>\r\n  </SectionContent>\r\n);\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainHeader = styled.h1`\r\n  text-align: left;\r\n  margin-top: 30px;\r\n  font-weight: 700;\r\n`;\r\n","import { MainHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => <MainHeader>{title}</MainHeader>;\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.main`\r\n  max-width: 815px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n`;\r\n","import { Content } from \"./styled.js\";\r\n\r\nconst Container = (props) => <Content>{props.children}</Content>;\r\n\r\nexport default Container;\r\n","import Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useState } from \"react\";\r\nimport { useTasks } from \"./useTasks\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone((hideDone) => !hideDone);\r\n  };\r\n\r\n  const { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section title=\"Dodaj nowe zadanie\" sectionContent={<Form addNewTask={addNewTask} />} />\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        sectionContent={\r\n          <Tasks tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setAllDone={setAllDone} />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n  const getInitialTasksFromLocalStorage = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(getInitialTasksFromLocalStorage);\r\n  const removeTask = (id) => {\r\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return {\r\n            ...task,\r\n            done: !task.done,\r\n          };\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => ({\r\n        ...task,\r\n        done: true,\r\n      }))\r\n    );\r\n  };\r\n\r\n  const addNewTask = (newTaskConent) => {\r\n    setTasks((tasks) => [\r\n      ...tasks,\r\n      {\r\n        content: newTaskConent,\r\n        done: false,\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}